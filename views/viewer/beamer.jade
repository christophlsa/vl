extends layout

block content
	div#waiting Bitte wartenâ€¦

	div#identify ..
	div#flashs
	div#timers
	h1#title
	div#content

	script(type='text/javascript')
		var currentSlideID = null;
		$("#identify").hide();

		function setBeamerContent(slideid, slide) {
			currentSlideID = slideid;
			$('#title').text(slide.title);
			if (slide.type == 'text') {
				$('#content').text(slide.text);
			} else if (slide.type == 'html') {
				$('#content').html(slide.html);
			} else if (slide.type == 'agenda') {
				$('#content').text("OHAI!");
			} else {
				$('#content').text("");
			}	
		}

	script(type='text/javascript')
		var timerCurrent = {};
		var timerTimeout = {};

		function updateTimerData(timerid, timer) {
			timerCurrent[timerid] = timer.current;

			if (timerid in timerTimeout) {
				window.clearInterval(timerTimeout[timerid]);
				delete timerTimeout[timerid];
			}
			if (timer.running == "true") {
				timerTimeout[timerid] = window.setInterval(function () {
					timerCurrent[timerid] -= 0.5;
					if (timerCurrent[timerid] < 0) {
						timerCurrent[timerid] = 0;
					}
					$("#timers #timer-" + timerid).text(formatTime(timerCurrent[timerid]));
				}, 500);
			}
			$("#timers #timer-" + timerid).css("background-color", timer.color);
			$("#timers #timer-" + timerid).text(formatTime(timerCurrent[timerid]));
		}

		function formatTime(time) {
			var seconds = Math.floor(time % 60);
			var minutes = Math.floor(time / 60);
			if (seconds < 10) {
				seconds = "0" + seconds;
			}
			if (minutes < 10) {
				minutes = "0" + minutes;
			}
			return minutes + ":" + seconds;
		}

	script(type='text/javascript')
		var socket = io.connect();
		socket.on('connect', function () {
			$('#waiting').hide();
			socket.emit('registerbeamer', {beamerid: '#{beamerid}'});
		});

		socket.on('beamer-identify', function (data) {
			$("#identify").show();
			window.setTimeout(function () {
				$("#identify").hide();
			}, data.timeout * 1000);
		});

		socket.on('beamer-change:#{beamerid}', function (data) {
			if (currentSlideID != null) {
				socket.emit('slide-close', { slideid : currentSlideID });
			}
			socket.emit('slide-open', { slideid : data.beamer.currentslideid });
			socket.on('slide-change:' + data.slideid, function(changeData) {
				setBeamerContent(data.slideid, changeData.slide);
			});
			setBeamerContent(data.beamer.currentslideid, data.currentslide);
			$("#identify").css("background-color", data.beamer.color);
		});

		socket.on('beamer-flash:#{beamerid}', function (data) {
			var flashContainer = $("<div>");
			flashContainer.addClass("flash-" + data.flash.type);
			flashContainer.text(data.flash.text);

			window.setTimeout(function () {
				flashContainer.hide();
			}, data.flash.timeout * 1000);

			// Insert hidden to allow effects
			flashContainer.hide();
			$("#flashs").append(flashContainer);

			flashContainer.show();
		});

		socket.on('beamer-showtimer:#{beamerid}', function (data) {
			socket.on('timer-change:' + data.timerid, function (timerData) {
				updateTimerData(data.timerid, timerData.timer);
			});
			if ($("#timers #timer-" + data.timerid).length < 1) {
				var timer = $("<div>").attr("id", "timer-" + data.timerid);
				timer.addClass("timer");

				// Insert hidden to allow effects
				timer.hide();
				$("#timers").append(timer);
			}
			updateTimerData(data.timerid, data.timer);
			$("#timers #timer-" + data.timerid).show();
		});

		socket.on('beamer-hidetimer:#{beamerid}', function (data) {
			$("#timers #timer-" + data.timerid).hide();
		});
